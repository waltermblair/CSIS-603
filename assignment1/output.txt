/usr/lib/jvm/java-8-openjdk-amd64/bin/java -javaagent:/home/walter/idea-IC-172.3544.35/lib/idea_rt.jar=38803:/home/walter/idea-IC-172.3544.35/bin -Dfile.encoding=UTF-8 -classpath "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/icedtea-sound.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/home/walter/Desktop/Fall 2017/603/assignment1/out/production/assignment1" TestFraction resources/testCases.txt
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 5 / 10
Second numerator & denominator entered: 4 / 2
f1 = 1/2    f2 = 2/1

f1.toDouble() = 0.5    f2.toDouble() = 2.0

f1 == f2 is false
f1.equals(f2) is false
f1.compareTo(f2) is -1

-f1 = -1/2

f1 + f2 = 5/2
f1 - f2 = -3/2
f1 * f2 = 1/1
f1 / f2 = 1/4
***********************************************************
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 4 / 2
Second numerator & denominator entered: 5 / 10
f1 = 2/1    f2 = 1/2

f1.toDouble() = 2.0    f2.toDouble() = 0.5

f1 == f2 is false
f1.equals(f2) is false
f1.compareTo(f2) is 1

-f1 = -2/1

f1 + f2 = 5/2
f1 - f2 = 3/2
f1 * f2 = 1/1
f1 / f2 = 4/1
***********************************************************
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 5 / 10
Second numerator & denominator entered: 1 / 2
f1 = 1/2    f2 = 1/2

f1.toDouble() = 0.5    f2.toDouble() = 0.5

f1 == f2 is false
f1.equals(f2) is true
f1.compareTo(f2) is 0

-f1 = -1/2

f1 + f2 = 1/1
f1 - f2 = 0/1
f1 * f2 = 1/4
f1 / f2 = 1/1
***********************************************************
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 0 / 1
Second numerator & denominator entered: 1 / 2
f1 = 0/1    f2 = 1/2

f1.toDouble() = 0.0    f2.toDouble() = 0.5

f1 == f2 is false
f1.equals(f2) is false
f1.compareTo(f2) is -1

-f1 = 0/1

f1 + f2 = 1/2
f1 - f2 = -1/2
f1 * f2 = 0/1
f1 / f2 = 0/1
***********************************************************
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 9 / 3
Second numerator & denominator entered: 6 / 2
f1 = 3/1    f2 = 3/1

f1.toDouble() = 3.0    f2.toDouble() = 3.0

f1 == f2 is false
f1.equals(f2) is true
f1.compareTo(f2) is 0

-f1 = -3/1

f1 + f2 = 6/1
f1 - f2 = 0/1
f1 * f2 = 9/1
f1 / f2 = 1/1
***********************************************************
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 50 / 100
Second numerator & denominator entered: 2 / 4
f1 = 1/2    f2 = 1/2

f1.toDouble() = 0.5    f2.toDouble() = 0.5

f1 == f2 is false
f1.equals(f2) is true
f1.compareTo(f2) is 0

-f1 = -1/2

f1 + f2 = 1/1
f1 - f2 = 0/1
f1 * f2 = 1/4
f1 / f2 = 1/1
***********************************************************
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 18 / 3
Second numerator & denominator entered: 18 / 2
f1 = 6/1    f2 = 9/1

f1.toDouble() = 6.0    f2.toDouble() = 9.0

f1 == f2 is false
f1.equals(f2) is false
f1.compareTo(f2) is -1

-f1 = -6/1

f1 + f2 = 15/1
f1 - f2 = -3/1
f1 * f2 = 54/1
f1 / f2 = 2/3
***********************************************************
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 14 / 2
Second numerator & denominator entered: 2 / 14
f1 = 7/1    f2 = 1/7

f1.toDouble() = 7.0    f2.toDouble() = 0.14285714285714285

f1 == f2 is false
f1.equals(f2) is false
f1.compareTo(f2) is 1

-f1 = -7/1

f1 + f2 = 50/7
f1 - f2 = 48/7
f1 * f2 = 1/1
f1 / f2 = 49/1
***********************************************************
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 1 / 2
Second numerator & denominator entered: 3 / 4
f1 = 1/2    f2 = 3/4

f1.toDouble() = 0.5    f2.toDouble() = 0.75

f1 == f2 is false
f1.equals(f2) is false
f1.compareTo(f2) is -1

-f1 = -1/2

f1 + f2 = 5/4
f1 - f2 = -1/4
f1 * f2 = 3/8
f1 / f2 = 2/3
***********************************************************
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 4 / 3
Second numerator & denominator entered: 2 / 1
f1 = 4/3    f2 = 2/1

f1.toDouble() = 1.3333333333333333    f2.toDouble() = 2.0

f1 == f2 is false
f1.equals(f2) is false
f1.compareTo(f2) is -1

-f1 = -4/3

f1 + f2 = 10/3
f1 - f2 = -2/3
f1 * f2 = 8/3
f1 / f2 = 2/3
***********************************************************
Enter four integers representing two fractions ("0 1 0 1" to terminate):  
First numerator & denominator entered: 0 / 1
Second numerator & denominator entered: 0 / 1

Process finished with exit code 0

